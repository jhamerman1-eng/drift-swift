@echo off
REM Environment Setup Helper - Secure API Key Configuration
REM This script helps you configure your Drift trading environment variables

echo.
echo 🔧 Drift Trading Environment Setup Helper
echo ==========================================
echo.

REM Check if we're in the right directory
if not exist "setup_devnet_trading.bat" (
    echo ❌ ERROR: Please run this script from the drift-swift directory
    echo Current directory: %CD%
    pause
    exit /b 1
)

REM Check current environment status
echo 📊 Current Environment Status:
echo ──────────────────────────────────────

if "%DRIFT_API_KEY%"=="" (
    echo ❌ DRIFT_API_KEY: Not set
) else (
    echo ✅ DRIFT_API_KEY: Set (hidden for security)
)

if "%DRIFT_CLUSTER%"=="" (
    echo ❌ DRIFT_CLUSTER: Not set
) else (
    echo ✅ DRIFT_CLUSTER: %DRIFT_CLUSTER%
)

if exist ".devnet_wallet.json" (
    echo ✅ Wallet file: Found (.devnet_wallet.json)
) else (
    echo ❌ Wallet file: Not found
)

echo.

:menu
echo 🎯 What would you like to do?
echo ──────────────────────────────────────
echo 1. Set API Key (secure input)
echo 2. Set API Key from file
echo 3. Generate environment file
echo 4. Show current configuration
echo 5. Test environment setup
echo 6. Exit
echo.
set /p choice="Enter your choice (1-6): "

if "%choice%"=="1" goto set_api_key
if "%choice%"=="2" goto set_api_key_file
if "%choice%"=="3" goto generate_env_file
if "%choice%"=="4" goto show_config
if "%choice%"=="5" goto test_setup
if "%choice%"=="6" goto exit_script

echo ❌ Invalid choice. Please enter 1-6.
goto menu

:set_api_key
echo.
echo 🔐 Setting API Key (Secure Input)
echo ──────────────────────────────────────
echo 💡 Your API key will not be displayed as you type
echo 💡 Get your Helius API key from: https://helius.dev
echo.

REM Use PowerShell for secure password input
for /f "delims=" %%i in ('powershell -command "$apiKey = Read-Host 'Enter your Helius API Key' -AsSecureString; [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($apiKey))"') do set "DRIFT_API_KEY=%%i"

if "%DRIFT_API_KEY%"=="" (
    echo ❌ No API key entered. Returning to menu.
    goto menu
)

REM Basic validation of API key format (should be alphanumeric)
echo %DRIFT_API_KEY% | findstr /r "^[a-zA-Z0-9_-]*$" >nul
if errorlevel 1 (
    echo ❌ API key contains invalid characters. Please try again.
    set "DRIFT_API_KEY="
    goto menu
)

echo ✅ API key set successfully (length: !DRIFT_API_KEY:~0,-1! characters)
echo 💡 Note: This is only set for the current session
echo 💡 To make it permanent, use option 3 to generate an environment file

goto menu

:set_api_key_file
echo.
echo 📁 Setting API Key from File
echo ──────────────────────────────────────
set /p api_file="Enter path to API key file: "

if not exist "%api_file%" (
    echo ❌ File not found: %api_file%
    goto menu
)

REM Read first line from file
set /p DRIFT_API_KEY=<"%api_file%"

REM Remove any trailing whitespace
for /f "tokens=*" %%i in ("%DRIFT_API_KEY%") do set "DRIFT_API_KEY=%%i"

if "%DRIFT_API_KEY%"=="" (
    echo ❌ API key file is empty
    goto menu
)

echo ✅ API key loaded from file successfully
goto menu

:generate_env_file
echo.
echo 📄 Generating Environment File
echo ──────────────────────────────────────

if "%DRIFT_API_KEY%"=="" (
    echo ❌ Please set your API key first (option 1)
    goto menu
)

REM Generate .env file
echo # Drift Trading Environment Configuration > .env
echo # Generated by setup_environment.bat on %DATE% %TIME% >> .env
echo. >> .env
echo # Helius API Key (get from https://helius.dev) >> .env
echo DRIFT_API_KEY=%DRIFT_API_KEY% >> .env
echo. >> .env
echo # Drift Configuration >> .env
echo DRIFT_CLUSTER=devnet >> .env
echo DRIFT_KEYPAIR_PATH=.devnet_wallet.json >> .env
echo USE_MOCK=false >> .env
echo. >> .env
echo # Swift Configuration >> .env
echo SWIFT_BASE=https://swift.drift.trade >> .env

echo ✅ Environment file (.env) created successfully!
echo.
echo 💡 To use this file, you can:
echo    • Load it manually: for /f "tokens=*" %%i in (.env) do set %%i
echo    • Or integrate it into your startup scripts
echo.
echo 📋 File contents:
type .env | findstr /v "^#" | findstr /v "^$"

goto menu

:show_config
echo.
echo 📊 Current Configuration
echo ──────────────────────────────────────

echo 🔑 API Key Status:
if "%DRIFT_API_KEY%"=="" (
    echo   ❌ Not set
) else (
    echo   ✅ Set (length: !DRIFT_API_KEY:~0,-1! characters)
)

echo.
echo 🌍 Environment Variables:
echo   DRIFT_CLUSTER: %DRIFT_CLUSTER%
echo   DRIFT_KEYPAIR_PATH: %DRIFT_KEYPAIR_PATH%
echo   USE_MOCK: %USE_MOCK%
echo   SWIFT_BASE: %SWIFT_BASE%

echo.
echo 📁 File Status:
if exist ".devnet_wallet.json" (
    for /f %%i in (".devnet_wallet.json") do echo   ✅ Wallet file: %%~ni%%~xi (%%~zi bytes)
) else (
    echo   ❌ Wallet file: Not found
)

if exist ".env" (
    echo   ✅ Environment file: Found
) else (
    echo   ❌ Environment file: Not found
)

if exist "requirements.txt" (
    echo   ✅ Requirements file: Found
) else (
    echo   ❌ Requirements file: Not found
)

goto menu

:test_setup
echo.
echo 🧪 Testing Environment Setup
echo ──────────────────────────────────────

set tests_passed=0
set total_tests=0

REM Test 1: API Key
set /a total_tests+=1
if "%DRIFT_API_KEY%"=="" (
    echo ❌ Test 1 FAILED: DRIFT_API_KEY not set
) else (
    echo ✅ Test 1 PASSED: DRIFT_API_KEY is set
    set /a tests_passed+=1
)

REM Test 2: Python
set /a total_tests+=1
python --version >nul 2>&1
if errorlevel 1 (
    echo ❌ Test 2 FAILED: Python not found
) else (
    echo ✅ Test 2 PASSED: Python is available
    set /a tests_passed+=1
)

REM Test 3: Required packages
set /a total_tests+=1
python -c "import driftpy" >nul 2>&1
if errorlevel 1 (
    echo ❌ Test 3 FAILED: driftpy not installed
) else (
    echo ✅ Test 3 PASSED: driftpy is available
    set /a tests_passed+=1
)

REM Test 4: Wallet file
set /a total_tests+=1
if exist ".devnet_wallet.json" (
    echo ✅ Test 4 PASSED: Wallet file exists
    set /a tests_passed+=1
) else (
    echo ❌ Test 4 FAILED: Wallet file not found
)

echo.
echo 📊 Test Results: %tests_passed%/%total_tests% tests passed

if %tests_passed% equ %total_tests% (
    echo 🎉 All tests passed! You're ready to run setup_devnet_trading.bat
) else (
    echo ⚠️  Some tests failed. Please address the issues above.
)

goto menu

:exit_script
echo.
echo 👋 Goodbye! Your environment is ready.
echo 💡 Remember to run setup_devnet_trading.bat when you're ready to trade
pause
exit /b 0



